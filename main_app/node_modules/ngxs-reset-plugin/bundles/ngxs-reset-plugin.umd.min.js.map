{"version":3,"sources":["../../../node_modules/tslib/tslib.es6.js","ng://ngxs-reset-plugin/lib/internals.ts","ng://ngxs-reset-plugin/lib/reset.service.ts","ng://ngxs-reset-plugin/lib/reset.handler.ts","ng://ngxs-reset-plugin/lib/symbols.ts","ng://ngxs-reset-plugin/lib/reset.plugin.ts","ng://ngxs-reset-plugin/lib/reset.module.ts"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","__read","o","m","Symbol","iterator","r","e","ar","next","done","push","value","error","noop","ResetService","Injectable","ResetHandler","actions$","store","resetService","_this","pipe","ofActionSuccessful","InitState","take","subscribe","initialState","snapshot","UpdateState","_a","addedStates","Actions","Store","StateClear","statesToKeep","_i","reducer","createMetaDataListReducer","isDevMode","reduce","type","StateReset","statesToReset","StateResetAll","StateOverwrite","overwriteConfigs","devMode","acc","_b","state","meta","getMetaData","concat","states","values","statesToOverwrite","getStoreMetadata","name","console","warn","NgxsResetPlugin","clearStates","map","getPath","path","parts","split","getValue","obj","reduceRight","part","overwriteStates","forEach","index","setValue","resetStates","defaults","children","resetStatesAll","handle","action","getActionTypeFromInstance","NgxsResetPluginModule","forRoot","ngModule","providers","provide","APP_INITIALIZER","useFactory","deps","multi","NGXS_PLUGINS","useClass","NgModule"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","export interface MetaDataModel {\n  name: string | null;\n  defaults: any;\n  path: string | null;\n  children?: StateClass[];\n}\n\n/**\n * a simplified implementation of NGXS StateClass interface\n */\nexport interface StateClass<T = {}> {\n  NGXS_META?: MetaDataModel;\n\n  new (...args: any[]): T;\n}\n\nexport function noop() {\n  return () => {};\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class ResetService {\n  initialState: any;\n}\n","import { Injectable } from '@angular/core';\nimport { Actions, InitState, ofActionSuccessful, Store, UpdateState } from '@ngxs/store';\nimport { take } from 'rxjs/operators';\nimport { ResetService } from './reset.service';\n\n@Injectable()\nexport class ResetHandler {\n  constructor(\n    private actions$: Actions,\n    private store: Store,\n    private resetService: ResetService,\n  ) {\n    this.actions$\n      .pipe(\n        ofActionSuccessful(InitState),\n        take(1),\n      )\n      .subscribe(() => (this.resetService.initialState = this.store.snapshot()));\n\n    this.actions$.pipe(ofActionSuccessful(UpdateState)).subscribe(\n      ({ addedStates }) =>\n        (this.resetService.initialState = {\n          ...this.resetService.initialState,\n          ...addedStates,\n        }),\n    );\n  }\n}\n","import { isDevMode } from '@angular/core';\nimport { getStoreMetadata } from '@ngxs/store';\nimport { MetaDataModel, StateClass } from './internals';\n\nexport type OverwriteTuple = [StateClass, any];\ntype MetaTuple = [MetaDataModel[], any[]];\ntype MetaListReducer = (\n  acc: MetaDataModel[],\n  state: StateClass,\n) => MetaDataModel[];\ntype MetaTupleReducer = (\n  acc: MetaTuple,\n  [state, value]: OverwriteTuple,\n) => MetaTuple;\n\n/**\n * Action to clear all state except given state(s)\n */\nexport class StateClear {\n  static readonly type = '@@CLEAR_STATE';\n  public readonly statesToKeep: MetaDataModel[];\n\n  // The duplication is necessary for TypeScript\n  // tslint:disable-next-line:unified-signatures\n  constructor(...statesToKeep: StateClass[]);\n  constructor();\n  constructor(...statesToKeep: StateClass[]) {\n    const reducer = createMetaDataListReducer(isDevMode());\n    this.statesToKeep = statesToKeep.reduce<MetaDataModel[]>(reducer, []);\n  }\n}\n\n/**\n * Action to reset given state(s) to defaults\n */\nexport class StateReset {\n  static readonly type = '@@RESET_STATE';\n  public readonly statesToReset: MetaDataModel[];\n  constructor(...statesToReset: StateClass[]) {\n    const reducer = createMetaDataListReducer(isDevMode());\n    this.statesToReset = statesToReset.reduce<MetaDataModel[]>(reducer, []);\n  }\n}\n\n/**\n * Action to reset all states expect given state(s) to defaults\n */\nexport class StateResetAll {\n  static readonly type = '@@RESET_STATE_ALL';\n  public readonly statesToKeep: MetaDataModel[];\n\n  // The duplication is necessary for TypeScript\n  // tslint:disable-next-line:unified-signatures\n  constructor(...statesToKeep: StateClass[]);\n  constructor();\n  constructor(...statesToKeep: StateClass[]) {\n    const reducer = createMetaDataListReducer(isDevMode());\n    this.statesToKeep = statesToKeep.reduce<MetaDataModel[]>(reducer, []);\n  }\n}\n\n/**\n * Action to overwrite state(s) with given value(s)\n */\nexport class StateOverwrite {\n  static readonly type = '@@OVERWRITE_STATE';\n  public readonly statesToOverwrite: MetaDataModel[];\n  public readonly values: any[];\n  constructor(...overwriteConfigs: OverwriteTuple[]) {\n    const reducer = createMetaTupleReducer(isDevMode());\n    const [states, values] = overwriteConfigs.reduce<MetaTuple>(reducer, [\n      [],\n      [],\n    ]);\n\n    this.statesToOverwrite = states;\n    this.values = values;\n  }\n}\n\nexport function getMetaData(\n  state: StateClass,\n  devMode: number,\n): MetaDataModel | null {\n  const meta = new Object(getStoreMetadata(state as any)) as MetaDataModel;\n  const isNgxsMeta = meta.name && 'defaults' in meta;\n\n  // Reusability Hack: devMode is number on purpose\n  if (!isNgxsMeta && devMode === -2) {\n    console.warn(`Reset Plugin Warning: ${meta.name} is not a state class.`);\n    return null;\n  }\n\n  return meta;\n}\n\nfunction createMetaDataListReducer(devMode: boolean): MetaListReducer {\n  return (acc: MetaDataModel[], state: StateClass): MetaDataModel[] => {\n    // tslint:disable-next-line:no-bitwise\n    const meta = getMetaData(state, ~devMode);\n\n    return meta ? acc.concat(meta) : acc;\n  };\n}\n\nfunction createMetaTupleReducer(devMode: boolean): MetaTupleReducer {\n  return (acc: MetaTuple, [state, value]: OverwriteTuple): MetaTuple => {\n    // tslint:disable-next-line:no-bitwise\n    const meta = getMetaData(state, ~devMode);\n\n    return meta ? [acc[0].concat(meta), acc[1].concat(value)] : acc;\n  };\n}\n","import { Injectable } from '@angular/core';\nimport { getActionTypeFromInstance, getValue, NgxsPlugin, setValue } from '@ngxs/store';\nimport { MetaDataModel } from './internals';\nimport { ResetService } from './reset.service';\nimport {\n  getMetaData,\n  StateClear,\n  StateOverwrite,\n  StateReset,\n  StateResetAll,\n} from './symbols';\n\n@Injectable()\nexport class NgxsResetPlugin implements NgxsPlugin {\n  constructor(private readonly resetService: ResetService) {}\n\n  private clearStates(state: any, statesToKeep: MetaDataModel[]): any {\n    return statesToKeep\n      .map(meta => getPath(meta))\n      .map(path => ({\n        parts: path.split('.'),\n        value: getValue(state, path),\n      }))\n      .reduce(\n        (obj, { parts, value }) =>\n          parts.reduceRight(\n            (acc, part) =>\n              part in obj\n                ? {\n                    [part]: {\n                      ...obj[part],\n                      ...acc,\n                    },\n                  }\n                : { [part]: acc },\n            value,\n          ),\n        {} as any,\n      );\n  }\n\n  private overwriteStates(\n    state: any,\n    statesToOverwrite: MetaDataModel[],\n    values: any[],\n  ): any {\n    statesToOverwrite.forEach(\n      (meta, index) => (state = setValue(state, getPath(meta), values[index])),\n    );\n    return state;\n  }\n\n  private resetStates(state: any, statesToReset: MetaDataModel[]): any {\n    statesToReset.forEach(meta => {\n      state = setValue(\n        state,\n        getPath(meta),\n        typeof meta.defaults === 'undefined' ? {} : meta.defaults,\n      );\n\n      if (meta.children) {\n        state = this.resetStates(state, meta.children.map(\n          getMetaData,\n        ) as MetaDataModel[]);\n      }\n    });\n\n    return state;\n  }\n\n  private resetStatesAll(state: any, statesToKeep: MetaDataModel[]): any {\n    const values = statesToKeep.map(meta => getValue(state, getPath(meta)));\n\n    return this.overwriteStates(this.resetService.initialState, statesToKeep, values);\n  }\n\n  handle(state: any, action: any, next: any) {\n    const type = getActionTypeFromInstance(action);\n\n    switch (type) {\n      case StateClear.type:\n        state = this.clearStates(state, (action as StateClear).statesToKeep);\n        break;\n\n      case StateReset.type:\n        state = this.resetStates(state, (action as StateReset).statesToReset);\n        break;\n\n      case StateResetAll.type:\n        state = this.resetStatesAll(state, (action as StateResetAll).statesToKeep);\n        break;\n\n      case StateOverwrite.type:\n        const { statesToOverwrite, values } = action as StateOverwrite;\n        state = this.overwriteStates(state, statesToOverwrite, values);\n        break;\n\n      default:\n        break;\n    }\n\n    return next(state, action);\n  }\n}\n\nfunction getPath(meta: MetaDataModel): string {\n  return meta.path;\n}\n","import { APP_INITIALIZER, ModuleWithProviders, NgModule } from '@angular/core';\nimport { NGXS_PLUGINS } from '@ngxs/store';\nimport { noop } from './internals';\nimport { ResetHandler } from './reset.handler';\nimport { NgxsResetPlugin } from './reset.plugin';\nimport { ResetService } from './reset.service';\n\n@NgModule()\nexport class NgxsResetPluginModule {\n  static forRoot(): ModuleWithProviders<NgxsResetPluginModule> {\n    return {\n      ngModule: NgxsResetPluginModule,\n      providers: [\n        ResetService,\n        ResetHandler,\n        {\n          provide: APP_INITIALIZER,\n          useFactory: noop,\n          deps: [ResetHandler],\n          multi: true,\n        },\n        {\n          provide: NGXS_PLUGINS,\n          useClass: NgxsResetPlugin,\n          multi: true,\n        },\n      ],\n    };\n  }\n}\n"]}